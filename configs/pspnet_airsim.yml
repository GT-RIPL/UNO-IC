id: "viz"
model:
    arch: pspnet
############
# BASELINE #
############
# start_layers: None
# models:
#     input_fusion:
#         in_channels: 4 #if receiving mean and variance from input legs
#         # start_layer: res_block5 #res_block3 #res_block2
#         # end_layer: classification        
#         reduction: 0.5
#         mcdo_passes: 1
#         mcdo_start_iter: None
#         mcdo_backprop: None
#         learned_uncertainty: "no"        
#         resume: None   
######################
# Middle Fusion MCDO #
######################
# learned_uncertainty: mode block needs to be "yes" followed by "double_input" fusion block
# start_layers: [convbnrelu1_1,res_block3] #,res_block4]
# models:
#     rgb:
#         in_channels: 3
#         # start_layer: res_block2
#         # end_layer: res_block4
#         reduction: 0.5
#         mcdo_passes: 1
#         mcdo_start_iter: 0
#         mcdo_backprop: True
#         learned_uncertainty: "yes"
#         resume: None        
#     d:
#         in_channels: 3
#         # start_layer: res_block2
#         # end_layer: res_block4
#         reduction: 0.5
#         mcdo_passes: 1  
#         mcdo_start_iter: 0
#         mcdo_backprop: True
#         learned_uncertainty: "yes"        
#         resume: None
#     fuse:
#         in_channels: 0 #if receiving mean and variance from input legs
#         # start_layer: res_block5 #res_block3 #res_block2
#         # end_layer: classification        
#         reduction: 0.5
#         mcdo_passes: 1
#         mcdo_start_iter: None
#         mcdo_backprop: None
#         learned_uncertainty: "double_input"        
#         resume: None
########################
# Isolated MCDO Fusion #
########################
start_layers: [convbnrelu1_1,res_block2,res_block3]
models:
    rgb_static:
        in_channels: 3
        # start_layer: convbnrelu1_1
        # end_layer: convbnrelu1_3
        reduction: 0.5
        mcdo_passes: 1
        mcdo_start_iter: None
        mcdo_backprop: None
        learned_uncertainty: "no"        
        resume: None     
    d_static:
        in_channels: 3
        # start_layer: convbnrelu1_1
        # end_layer: convbnrelu1_3
        reduction: 0.5
        mcdo_passes: 1
        mcdo_start_iter: 0
        mcdo_backprop: None
        learned_uncertainty: "no"        
        resume: None     
    rgb:
        in_channels: -1
        # start_layer: res_block2
        # end_layer: res_block4
        reduction: 0.5
        mcdo_passes: 5
        mcdo_start_iter: 0
        mcdo_backprop: True
        learned_uncertainty: "yes"
        resume: None        
    d:
        in_channels: -1
        # start_layer: res_block2
        # end_layer: res_block4
        reduction: 0.5
        mcdo_passes: 5
        mcdo_start_iter: 0
        mcdo_backprop: True
        learned_uncertainty: "yes"        
        resume: None
    fuse:
        in_channels: 0 #if receiving mean and variance from input legs
        # start_layer: res_block5 #res_block3 #res_block2
        # end_layer: classification        
        reduction: 0.5
        mcdo_passes: 1
        mcdo_start_iter: None
        mcdo_backprop: None
        learned_uncertainty: "double_input"        
        resume: None   
data:
    dataset: airsim
    path: ../../ros/data/airsim
    train_split: train
    train_subsplit: ["fog_000","fog_005","fog_010","fog_020"] #,"fog_025", "fog_050","fog_100"]
    val_split: val
    val_reduction: 0.25
    img_rows: 128 #512
    img_cols: 128 #512
training:
    train_iters: 300000
    batch_size: 16
    val_interval: 5000
    png_frames: 50
    n_workers: 16
    print_interval: 50
    optimizer:
        name: 'sgd'
        lr: 1.0e-10
        weight_decay: 0.0005
        momentum: 0.99
    loss:
        name: 'multi_scale_cross_entropy'
        size_average: False
    lr_schedule:
    resume: models/pspnet_airsim_default_fixed_segmentation_01-11-2019.pkl
    resumeRGB: None #models/pspnet_airsim_rgb_fog_all_01-16-2019.pkl
    resumeD: None #models/pspnet_airsim_depth_fog_all_01-16-2019.pkl
